 :-use_module(library(random)). :-dynamic haFattoAcquisti/1. :-dynamic buyer_in/1. :-dynamic saldo_agente/1. :-dynamic spesa/1. :-dynamic acquisti/1. :-dynamic impegnato/1. :-dynamic check_spesa/1. :-dynamic continuaAcquisti/1. nome_agente(mario). eta_agente(15). saldo_agente(300). spesa([]). acquisti([]). haFattoAcquisti(no). impegnato(no). buyer_in(false). avvia_trade:-impegnato(no),buyer_in(true),spesa(ListaSpesa),\+nonempty(ListaSpesa). evi(avvia_trade):-saldo_agente(X),eta_agente(Y),a(message(mercato,send_message(trading(Me,X,Y),Me))),retract(impegnato(no)),assert(impegnato(si)). eve(trade):-buyer_in(true),saldo_agente(X),eta_agente(Y),a(message(mercato,send_message(trading(Me,X,Y),Me))). eve(start):-buyer_in(true),write('Sono gia dentro il mercato!'). eve(start):-a(message(mercato,send_message(entra(Me,buyer),Me))),a(presentazione),retract(buyer_in(false)),asserta(buyer_in(true)). eve(esci):-a(message(mercato,send_message(esce(Me,buyer),Me))),a(saluti),retract(buyer_in(true)),asserta(buyer_in(false)). eve(ricevi_oggetto(Oggetto)):-spesa(ListaSpesa),append(ListaSpesa,[Oggetto],ListaCorrente),retractall(spesa(_)),assert(spesa(ListaCorrente)). eve(check_spesa):-stampa_spesa,assert(check_spesa(complete)). stampa_spesa:-spesa(ListaSpesa),(nonempty(ListaSpesa)->write('Lista spesa possibile: '),nl,(foreach(Oggetto,ListaSpesa)do write(Oggetto),nl)). scegli_prodotto:-spesa(ListaSpesa),nonempty(ListaSpesa),check_spesa(complete). evi(scegli_prodotto):-write('Scelgo un prodotto tra quelli disponibili....'),nl,spesa(ListaSpesa),acquisti(ListaAcquisti),random_member(Oggetto,ListaSpesa),write('Voglio acquistare questo oggetto: '),write(Oggetto),nl,append(ListaAcquisti,[Oggetto],ListaAcquistiNew),retractall(acquisti(_)),assert(acquisti(ListaAcquistiNew)),delete(ListaSpesa,Oggetto,NuovaListaSpesa),retractall(spesa(ListaSpesa)),assert(spesa(NuovaListaSpesa)),a(acquistaProdotto(Oggetto)). stampa_acquisti:-acquisti(ListaAcquisti),write('Lista acquisti: '),nl,(foreach(Oggetto,ListaAcquisti)do write(Oggetto),nl). nonempty(Lista):-Lista=[_|_]. a(acquistaProdotto([Nome,Costo])):-spesa(ListaSpesa),saldo_agente(Saldo),Costo=<Saldo,NuovoSaldo is Saldo-Costo,retract(saldo_agente(Saldo)),asserta(saldo_agente(NuovoSaldo)),write('Mi restano '),saldo_agente(X),write(X),write(' euro.'),nl,a(message(mercato,send_message(acquisto_effettuato([Nome,Costo],Me),Me))),check_acquisti. check_acquisti:-spesa(ListaSpesa),\+nonempty(ListaSpesa),nl,write('Ora non sono impegnato e posso dedicarmi a fare acquisti altrove!'),nl,retractall(haFattoAcquisti(no)),assert(haFattoAcquisti(si)),retractall(check_spesa(complete)),retractall(impegnato(si)),assert(impegnato(no)),retractall(continuaAcquisti(si)). considera:-impegnato(no),buyer_in(true),haFattoAcquisti(si),acquisti(ListaAcquisti),nonempty(ListaAcquisti). evi(considera):-write('Ecco i miei acquisti di oggi: '),stampa_acquisti. a(presentazione):-a(presentati),a(add_past(presentazione,3600)). a(presentati):-haFattoAcquisti(no),\+evp(presentazione),write(' Buonasera, mi presento, mi chiamo '),nome(X),write(X),write(', '),eta(Y),write(Y),write(' anni '),saldo(Z),write(' , possiedo '),write(Z),write(' Euro. '). a(saluti):-write('Ciao e grazie a tutti! Arrivederci!'). nome(X):-nome_agente(X). eta(X):-eta_agente(X). saldo(X):-saldo_agente(X). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_426395,Ontology,_426399),_426389),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_426433)),a(message(Ag,propose(A,[_426433],AgI))),retractall(ext_agent(Ag,_426471,Ontology,_426475)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_426269,Ontology,_426273),_426263),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_426339,Ontology,_426343)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_426157,Ontology,_426161),_426151),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_426213,Ontology,_426217)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_425721),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_425755),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_425537). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_425385),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_425333),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_425209,_425211)),clause(agente(_425231,_425233,_425235,S),_425227),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_425003,_425005,_425007,S),_424999),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_425103,[]),repeat,read(_425103,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_425103). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(presentati):-cd(presentati),assert(do_action(presentati,program)).
cd(presentati):-true.
a(presentazione):-cd(presentazione),assert(do_action(presentazione,program)).
cd(presentazione):-true.
a(saluti):-cd(saluti),assert(do_action(saluti,program)).
cd(saluti):-true.
a(acquistaProdotto(_1064121)):-cd(acquistaProdotto(_1064121)),assert(do_action(acquistaProdotto(_1064121),program)).
cd(acquistaProdotto(_1064121)):-true.
a(acquistaProdotto([_1064131,_1064135])):-cd(acquistaProdotto([_1064131,_1064135])),assert(do_action(acquistaProdotto([_1064131,_1064135]),program)).
cd(acquistaProdotto([_1064131,_1064135])):-true.
a(learned(_1064145)):-cd(learned(_1064145)),assert(do_action(learned(_1064145),program)).
cd(learned(_1064145)):-true.
a(add_past(presentazione,3600)):-cd(add_past(presentazione,3600)),assert(do_action(add_past(presentazione,3600),program)).
cd(add_past(presentazione,3600)):-true.
a(message(_1064163,confirm(learn(_1064175),_1064171))):-cd(message(_1064163,confirm(learn(_1064175),_1064171))),assert(do_action(message(_1064163,confirm(learn(_1064175),_1064171)),program)).
cd(message(_1064163,confirm(learn(_1064175),_1064171))):-true.
a(message(mercato,send_message(acquisto_effettuato([_1064131,_1064135],_1064197),_1064197))):-cd(message(mercato,send_message(acquisto_effettuato([_1064131,_1064135],_1064197),_1064197))),assert(do_action(message(mercato,send_message(acquisto_effettuato([_1064131,_1064135],_1064197),_1064197)),program)).
cd(message(mercato,send_message(acquisto_effettuato([_1064131,_1064135],_1064197),_1064197))):-true.
a(message(mercato,send_message(entra(_1064197,buyer),_1064197))):-cd(message(mercato,send_message(entra(_1064197,buyer),_1064197))),assert(do_action(message(mercato,send_message(entra(_1064197,buyer),_1064197)),program)).
cd(message(mercato,send_message(entra(_1064197,buyer),_1064197))):-true.
a(message(mercato,send_message(esce(_1064197,buyer),_1064197))):-cd(message(mercato,send_message(esce(_1064197,buyer),_1064197))),assert(do_action(message(mercato,send_message(esce(_1064197,buyer),_1064197)),program)).
cd(message(mercato,send_message(esce(_1064197,buyer),_1064197))):-true.
a(message(mercato,send_message(trading(_1064197,_1064271,_1064273),_1064197))):-cd(message(mercato,send_message(trading(_1064197,_1064271,_1064273),_1064197))),assert(do_action(message(mercato,send_message(trading(_1064197,_1064271,_1064273),_1064197)),program)).
cd(message(mercato,send_message(trading(_1064197,_1064271,_1064273),_1064197))):-true.
a(message(_1064281,reply(received(_1064271),_1064289))):-cd(message(_1064281,reply(received(_1064271),_1064289))),assert(do_action(message(_1064281,reply(received(_1064271),_1064289)),program)).
cd(message(_1064281,reply(received(_1064271),_1064289))):-true.
a(message(_1064281,accept_proposal(_1064289,[],_1064311))):-cd(message(_1064281,accept_proposal(_1064289,[],_1064311))),assert(do_action(message(_1064281,accept_proposal(_1064289,[],_1064311)),program)).
cd(message(_1064281,accept_proposal(_1064289,[],_1064311))):-true.
a(message(_1064281,failure(_1064289,motivation(false_conditions),_1064329))):-cd(message(_1064281,failure(_1064289,motivation(false_conditions),_1064329))),assert(do_action(message(_1064281,failure(_1064289,motivation(false_conditions),_1064329)),program)).
cd(message(_1064281,failure(_1064289,motivation(false_conditions),_1064329))):-true.
a(message(_1064281,inform(agree(_1064271),values(no),_1064289))):-cd(message(_1064281,inform(agree(_1064271),values(no),_1064289))),assert(do_action(message(_1064281,inform(agree(_1064271),values(no),_1064289)),program)).
cd(message(_1064281,inform(agree(_1064271),values(no),_1064289))):-true.
a(message(_1064281,inform(agree(_1064271),values(yes),_1064289))):-cd(message(_1064281,inform(agree(_1064271),values(yes),_1064289))),assert(do_action(message(_1064281,inform(agree(_1064271),values(yes),_1064289)),program)).
cd(message(_1064281,inform(agree(_1064271),values(yes),_1064289))):-true.
a(message(_1064281,inform(query_ref(_1064271,_1064409),motivation(no_values),_1064289))):-cd(message(_1064281,inform(query_ref(_1064271,_1064409),motivation(no_values),_1064289))),assert(do_action(message(_1064281,inform(query_ref(_1064271,_1064409),motivation(no_values),_1064289)),program)).
cd(message(_1064281,inform(query_ref(_1064271,_1064409),motivation(no_values),_1064289))):-true.
a(message(_1064281,inform(query_ref(_1064271,_1064409),values(_1064441),_1064289))):-cd(message(_1064281,inform(query_ref(_1064271,_1064409),values(_1064441),_1064289))),assert(do_action(message(_1064281,inform(query_ref(_1064271,_1064409),values(_1064441),_1064289)),program)).
cd(message(_1064281,inform(query_ref(_1064271,_1064409),values(_1064441),_1064289))):-true.
a(message(_1064281,propose(_1064289,[_1064461],_1064311))):-cd(message(_1064281,propose(_1064289,[_1064461],_1064311))),assert(do_action(message(_1064281,propose(_1064289,[_1064461],_1064311)),program)).
cd(message(_1064281,propose(_1064289,[_1064461],_1064311))):-true.
a(message(_1064281,refuse(agree(variable),motivation(refused_variables),_1064289))):-cd(message(_1064281,refuse(agree(variable),motivation(refused_variables),_1064289))),assert(do_action(message(_1064281,refuse(agree(variable),motivation(refused_variables),_1064289)),program)).
cd(message(_1064281,refuse(agree(variable),motivation(refused_variables),_1064289))):-true.
a(message(_1064281,refuse(query_ref(variable),motivation(refused_variables),_1064289))):-cd(message(_1064281,refuse(query_ref(variable),motivation(refused_variables),_1064289))),assert(do_action(message(_1064281,refuse(query_ref(variable),motivation(refused_variables),_1064289)),program)).
cd(message(_1064281,refuse(query_ref(variable),motivation(refused_variables),_1064289))):-true.
a(message(_1064281,reject_proposal(_1064289,[],_1064311))):-cd(message(_1064281,reject_proposal(_1064289,[],_1064311))),assert(do_action(message(_1064281,reject_proposal(_1064289,[],_1064311)),program)).
cd(message(_1064281,reject_proposal(_1064289,[],_1064311))):-true.
a(message(_1064541,inform(_1064547,motivation(refused_message),_1064329))):-cd(message(_1064541,inform(_1064547,motivation(refused_message),_1064329))),assert(do_action(message(_1064541,inform(_1064547,motivation(refused_message),_1064329)),program)).
cd(message(_1064541,inform(_1064547,motivation(refused_message),_1064329))):-true.
a(message(_1064563,send_message(sent_rmi(_1064271,_1064577,_1064579),_1064281))):-cd(message(_1064563,send_message(sent_rmi(_1064271,_1064577,_1064579),_1064281))),assert(do_action(message(_1064563,send_message(sent_rmi(_1064271,_1064577,_1064579),_1064281)),program)).
cd(message(_1064563,send_message(sent_rmi(_1064271,_1064577,_1064579),_1064281))):-true.
eve_cond(check_spesa):-cd(check_spesa),eve(check_spesa).
cd(check_spesa):-true.
eve_cond(esci):-cd(esci),eve(esci).
cd(esci):-true.
eve_cond(start):-cd(start),eve(start).
cd(start):-true.
eve_cond(trade):-cd(trade),eve(trade).
cd(trade):-true.
eve_cond(ricevi_oggetto(_1091937)):-cd(ricevi_oggetto(_1091937)),eve(ricevi_oggetto(_1091937)).
cd(ricevi_oggetto(_1091937)):-true.